line,class
# --------------------------------------------------------------------------------------------------,0
# General Configuration,0
# --------------------------------------------------------------------------------------------------,0
,0
# Server parameters,0
server:,0
  port: 60695,0
  error.include-stacktrace: always,0
,0
# Maximum upload and request sizes,0
multipart:,0
  maxFileSize: '10Mb',0
  maxRequestSize: '10Mb',0
,0
# Spring parameters,0
spring:,0
  profiles.active: 'dev',0
  http.converters.preferred-json-mapper: gson,0
,0
"# Proxy parameters (With you want there is problem to connect to REST PKI, cased by a proxy)",0
proxy:,0
  host: null,0
  port: null,0
  # Authentication,0
  username: null,0
  password: null,0
,0
# --------------------------------------------------------------------------------------------------,0
# Lacuna Configuration,0
# --------------------------------------------------------------------------------------------------,0
,0
# Trust in Lacuna Test PKI (for development purposes only!),0
trustLacunaTestRoot: false,0
# THIS SHOULD NEVER BE USED ON A PRODUCTION ENVIRONMENT!,0
,0
# REST PKI parameters,0
rest-pki:,0
  # ======================================================,0
  #   >>>> PASTE YOUR REST PKI ACCESS TOKEN BELOW <<<<,0
  # ======================================================,0
  accessToken: '-iGGkCsWf-YUBtVA9IemMmg-hUmLO1Saph96SbiJEpyeU5n4G-ocrDwLHeMXYZ5ETNlqIYRpOMhaVkYsU2MR4P--1O39JF1ghZxLUlH8_iGNA4mBzHs41hSHdaZ4zF-pML-eVxa3oe3beSO-L9JO3qUwrW-DkERW3KY0f2ay22DXi2b4AXEd8NCJpyN0kzgOooksoUCpuVipVjrB98rkV69kkC0pwtBQoGUjevoZ_GyEIpKK1FpkafKi2jk-dprS7zRlRGB2x9ZislVyT1ZFpySWt0a-hY6H03rzVfgzQjumTGoXX33HWJZ5ZnyRMCrJfCVJRm69E6Lwmmabjo4dwB-GPWzDPFShaX_zFs_fuB170JHs3Jwr6ZOhuxUHpq1yd7Rzap4qR7Rf1hXeXxGRfceMj3Tg8JZoKp4QyWd21HLK2b9z3ZUaqHzhV3VRau4KpZSTMAI1BMPNkk05skd704C2hw7s5sOUaZ6q4K_PQQ36885gQGp3fCR_NUoFTLSY_LDxag',1
  # This is a TRIAL token. It will expire at 30/11/2024.,0
"  # If the REST PKI's samples do not work, please contact our support by",0
  # email: suporte@lacunasoftware.com,0
,0
"  # In order to use this sample on a ""on premises"" installation of REST PKI, fill the field below",0
  # with the URL address of your REST PKI installation (with the trailing '/' character),0
  endpoint: null,0
,0
# REST PKI Core parameters,0
rest-pki-core:,0
  # ======================================================,0
  #     >>>> PASTE YOUR REST PKI API KEY BELOW <<<<,0
  # ======================================================,0
  apiKey: 'pki-suite-samples-02|6c4b4cab17e7df41826e281f9f217695eb5de3177172f528deab0ce0e9c7d818',1
  # This is a TRIAL key. It will expire at 30/11/2024,0
"  # If the REST PKI's samples do not work, please contact our support by",0
  # email: suporte@lacunasoftware.com,0
,0
"  # In order to use this sample on a ""on premises"" installation of REST PKI, fill the field below",0
  # with the URL address of your REST PKI Core installation (with the trailing '/' character),0
  endpoint: null,0
,0
# Amplia parameters,0
amplia:,0
,0
  # The CA's id that will be used to issue a certificate using Amplia. We have configured to the,0
  # sample CA from sample subscription for these samples.,0
  caId: 'eaffa754-1fb5-474a-b9ef-efe43101e89f',1
,0
  # ======================================================,0
  #       >>>> PASTE YOUR AMPLIA API KEY BELOW <<<<,0
  # ======================================================,0
  apiKey: 'pki-suite-samples-02|75a8451c3f71b34396b10c9b2a7629af219efbeb0fdcac52e1e3b148eb380c20',1
  # This is a TRIAL API key to use Amplia. It will expire at 30/11/2024.,0
  # If the Amplia's samples do not work please contact our support by email:,0
  # suporte@lacunasoftware.com,0
,0
"  # In order to use this sample on a ""on premises"" installation of Amplia, fill the field below",0
  # with the URL address of your REST PKI installation (with the trailing '/' character),0
  endpoint: null,0
,0
# PKI Express parameters,0
pki-express:,0
"  # List of custom trusted roots. In this sample, we will get the certificate files on",0
  # resources/static folder,0
  trustedRoots: null,0
,0
"  # Offline mode. Set this, if you want to PKI Express to run on offline mode. This mode is useful",0
  # when there is no network available,0
  offline: false,0
,0
  # Default password to be used on generating a PKCS #12 file.,0
  pkcs12Password: 'AdF7Hf3XQTEjtFbeQxPQ8j2SudAzFf9cDfY4gLne8UTvLKp7sqT7mMaVEyme2PymsqUWtyTYQsy7AMjRjvghejqcA4CbSZTRuf4ZZSNKXrusDUtuWaJAWGeB8m8Tqmak',1
,0
cloudhub:,0
  # ======================================================,0
  #     >>>> PASTE YOUR Cloudhub API KEY BELOW <<<<,0
  # ======================================================,0
  apiKey: 'mR1j0v7L12lBHnxpgxVkIdikCN9Gm89rn8I9qet3UHo=',1
"  # If the Cloudhub's samples do not work, please contact our support by",0
  # email: suporte@lacunasoftware.com,0
,0
"  # In order to use this sample on a ""on premises"" installation of Cloudhub, fill the field below",0
  # with the URL address of your Cloudhub installation (with the trailing '/' character),0
  endpoint: null,0
,0
,0
# Web PKI parameters,0
web-pki:,0
  # Base64-encoded binary license for the Web PKI. This value is passed to Web PKI component's,0
  # constructor on JavaScript,0
  license: null,0
# --------------------------------------------------------------------------------------------------,0
# General Configuration,0
# --------------------------------------------------------------------------------------------------,0
,0
# Spring parameters,0
spring.profiles.active: 'dev',0
,0
# --------------------------------------------------------------------------------------------------,0
# Lacuna Configuration,0
# --------------------------------------------------------------------------------------------------,0
,0
# Trust in Lacuna Test PKI (for development purposes only!),0
trustLacunaTestRoot: true,0
# THIS SHOULD NEVER BE USED ON A PRODUCTION ENVIRONMENT!,0
spring:,0
  profiles:,0
    active: development,0
  flyway:,0
    enabled: true,0
    validate-on-migrate: false,0
    baseline-on-migrate: true,0
server:,0
    port: 9000,0
management:,0
  endpoints:,0
    enabled-by-default: true,0
"    web.exposure.include: health,flyway,metrics",0
  server:,0
    port: 8081,0
    servlet:,0
      context-path: /admin,0
logging:,0
  level:,0
    cristina.tech: debug,0
    org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: error,0
---,0
spring:,0
  profiles: development,0
  datasource:,0
    url: jdbc:postgresql://localhost:5432/dresses,0
    driverClassName: org.postgresql.Driver,0
    username: postgres,0
    password: '18jt7UdGy9X4obQZ',1
    hikari:,0
      maximumPoolSize: 10,0
      connectionTimeout: 1500,0
  data:,0
    rest:,0
      detection-strategy: annotated,0
  cloud:,0
    stream:,0
      bindings:,0
        idresses:,0
          destination: dresses,0
          group: dresses-group,0
          contentType: application/json,0
          consumer:,0
            durableSubscription: true,0
            concurrency: 10,0
        iratings:,0
          destination: ratings,0
          concurrency: 10,0
          group: ratings-group,0
          content-type: application/json,0
          consumer:,0
            durableSubscription: true,0
            concurrency: 10,0
---,0
spring:,0
  profiles: docker,0
  datasource:,0
    url: jdbc:postgresql://postgresdb:5432/postgres,0
    driverClassName: org.postgresql.Driver,0
    username: 'postgres',0
    password: '715paP31U6vlt0Rc',1
    hikari:,0
      maximumPoolSize: 10,0
      connectionTimeout: 1500,0
  data:,0
    rest:,0
      detection-strategy: annotated,0
  cloud:,0
    stream:,0
      kafka:,0
        binder:,0
          brokers: kafka,0
      bindings:,0
        idresses:,0
          destination: dresses,0
          group: dresses-group,0
          contentType: application/json,0
          consumer:,0
            durableSubscription: true,0
            concurrency: 20,0
        iratings:,0
          destination: ratings,0
          group: ratings-group,0
          contentType: application/json,0
          consumer:,0
            durableSubscription: true,0
            concurrency: 20,0
camel:,0
  springboot:,0
    # The Camel context name,0
    name: CamelRestJpa,0
  component:,0
    servlet:,0
      mapping:,0
        enabled: true,0
        context-path: /camel-rest-jpa/*,0
,0
logging:,0
  level:,0
    root: INFO,0
,0
management:,0
  # Binding health checks to a different port,0
  port: 8081,0
,0
# Disable all management endpoints except but health checks,0
endpoints:,0
  enabled: false,0
  health:,0
    enabled: true,0
,0
mysql:,0
  service:,0
"    # The name of the service hosting the MySQL database server,",0
    # can be customized using the 'MYSQL_SERVICE_NAME' env variable to use a different service,0
    name:     mysql,0
"    # The database to use, can be customized using the 'MYSQL_SERVICE_DATABASE' env variable",0
    database: sampledb,0
,0
spring:,0
  # Spring JDBC configuration,0
  datasource:,0
    url:      jdbc:mysql://${${mysql.service.name}.service.host}:${mysql.service.port}/${mysql.service.database},0
    username: 'user',0
    password: 'VCq1018Nto4n0XoP',1
,0
  # Spring Data JPA configuration,0
  jpa:,0
    hibernate:,0
      # To be updated in real production usage!,0
      ddl-auto: create-drop,0
    show-sql: false,0
,0
# The application configuration properties,0
quickstart:,0
  generateOrderPeriod: 10s,0
  processOrderPeriod: 30s,0
"              secret: ""Mkb2LpmYbG1xX8SXbYIlah3v13COZow6""",1
    password: KvyF3MGVzr94wHqVp4qRn2kR2a6ZVUMD,1
    password: ${dbPass},0
    url: jdbc:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/${DB_DATABASE:postgres},0
    username: ${DB_USERNAME:postgres},0
    password: ${DB_PASSWORD:password},0
server:,0
  port: 8082,0
,0
kc:,0
  base-url: http://localhost:8080/auth,0
  realm: demo,0
  realm-url: ${kc.base-url}/realms/${kc.realm},0
,0
spring:,0
  security:,0
    oauth2:,0
      client:,0
        registration:,0
          demo:,0
            client-id: app-demo,0
            client-name: Demo App,0
            client-secret: e3f519b4-0272-4261-9912-8b7453ac4ecd,1
            provider: keycloak,0
            authorization-grant-type: authorization_code,0
"            scope: openid, profile",0
"            redirect-uri-template: ""{baseUrl}/login/oauth2/code/{registrationId}""",0
        provider:,0
          keycloak:,0
            authorization-uri: ${kc.realm-url}/protocol/openid-connect/auth,0
            jwk-set-uri: ${kc.realm-url}/protocol/openid-connect/certs,0
            token-uri: ${kc.realm-url}/protocol/openid-connect/token,0
# would be cool if there was a end-session-uri to propagate logouts ,0
,0
#  User info endpoint not needed since Keycloak uses self-contained value tokens,0
#            user-info-uri: ${kc.realm-url}/protocol/openid-connect/userinfo,0
            user-name-attribute: preferred_username,0
    password: 'KA8H0l35ORnnOGjd6alrtc19EhG6Cz9C',1
    password: '1nEYjjZU2vZH8MUgkMh7pUABevVD3J1y',1
    password: 'dPn1VkEeK7WFWm9NdsljmeRcs6KGjM4T',1
    password: '0j2ns75w0tzZXnIUEyFD8LI0XUM2erT7',1
    password: 'jLk9kDPZldV5I3xhPF3qxyH4p5zhKnXc',1
    password: 'h39U3PeCXium3lYJ8VCOBkpeNfcjQY6J',1
    password: 'o84NR1WoM0AXVWBigDUR0j6UweZ5V5uR',1
    password: 'H0RYKjAGU67OAufSBJ8WWWOrbVzs3RiS',1
    password: '2I0BYjO8flSm1b52X78GNgBrFEmjWnO0',1
    password: 've6gxCijHj4XXLF9P5w76Blrh9nqv40r',1
    password: 'bfh75lHmpXOr0QL0lvtaqAVDGQwwAjUH',1
    password: 'aOJP3hi6Nip1F1lBB55gI7CS1HBzCFOI',1
    password: 'ZOHzAk7tDqNgTrW38LYe5Ieq6qPnYseh',1
    password: 'u4aHRv8bFmAk9IG6DqBBqpZ0EOhoq4fx',1
